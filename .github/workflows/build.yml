name: Build and Publish Docker Container

on:
  workflow_call:
    inputs:
      node_env:
        required: true
        type: string
      image_name:
        required: true
        type: string
      registry:
        required: true
        type: string
      context:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      is_latest:
        required: true
        type: boolean
    secrets:
      token:
        required: true

jobs:
  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
          
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.token }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}
          flavor: |
            latest=${{ inputs.is_latest }}
          tags: |
            type=sha
            type=sha,format=long
            type=raw,value=${{ inputs.node_env }}
            type=semver,pattern={{version}}
            
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image Digest
        run: echo ${{ steps.docker_build.outputs.digest }}
